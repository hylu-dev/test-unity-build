name: Unity Build

on: [workflow_dispatch] # Changed push to also include tag pushes for releases later if desired

jobs:
  build:
    name: Build my project âœ¨
    runs-on: ubuntu-latest
    permissions:
      checks: write
      contents: write
      # Add 'packages: write' if you plan to push Docker images to GitHub Container Registry,
      # or if your release action specifically requires it for certain assets.
      # For just creating releases and uploading files, 'contents: write' is key.
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true

      # Cache
      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      # Test
      - name: Run tests
        uses: game-ci/unity-test-runner@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          # You might have other 'with' parameters for test runner here, from previous logs
          # e.g., unityVersion: auto, testMode: all, artifactsPath: artifacts, etc.

      # --- Debug loggin incase of dirty branch error ---
      - name: Show all uncommitted changes (diff)
        run: |
          echo "--- Checking for all uncommitted changes ---"
          if git diff --quiet HEAD; then
            echo "No uncommitted changes found."
          else
            echo "Uncommitted changes detected:"
            git diff HEAD
            # You might want to fail the workflow if uncommitted changes are found unexpectedly
            # exit 1
          fi
          echo "--- End of uncommitted changes diff ---"
        continue-on-error: true # Keep this true for debugging; set to false if you want the workflow to fail when diffs exist.
        
      # Build
      - name: Build project
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          # REMINDER: Same as above for UNITY_EMAIL/UNITY_PASSWORD
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: StandaloneWindows

      # Output
      - uses: actions/upload-artifact@v4
        with:
          name: Build
          path: build
          retention-days: 7 # Keep artifact for 1 week
